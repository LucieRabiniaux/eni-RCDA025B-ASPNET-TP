@model Module5TP2_Part1.Models.PizzaCreateEditVM

@using Module5TP2_Part1.Extensions;

@{
    ViewBag.Title = "Create";
}

<h2>Créer une nouvelle pizza</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Pizza</h4>
    <hr />

    @Html.ValidationMessageFor(model => model.Pizza, "", new { @class = "text-danger" })

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Pizza.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pizza.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pizza.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*DropDownListFor = choix unique*@
            @*On ajoute une option de value null "Selectionner une pâte" -> force l'utilisateur à choisir une pâte*@
            @Html.DropDownListFor(model => model.idSelectedPate, Model.Pate, "Selectionner une pâte", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idSelectedPate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*ListBoxFor = choix multiples*@
            @Html.ListBoxFor(model => model.idSelectedIngredients, Model.Ingredients, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idSelectedIngredients, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.CustomSubmit("Sauvegarder")
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
